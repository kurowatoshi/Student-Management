@page
@model StudentManagement.Pages.IndexModel

@{
    ViewData["Title"] = "Index";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
<style >
    .students-list {
        display: flex;
        flex-wrap: wrap; /* Cards will wrap to the next line if no space is available */
        gap: 10px; /* Adjusted gap for less space between cards */
    }

    .student-item {
        display: inline-block;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #f9f9f9;
        flex-basis: 30%; /* Cards will take up 30% of the width */
        min-width: 220px; /* Minimum width to prevent cards from getting too small */
        box-sizing: border-box; /* Include padding and border in width calculations */
        margin: 0; /* Ensure there's no additional margin */
        margin-top: 20px !important;
        margin-right: 10px !important;
        /* Animation effects */
        opacity: 0; /* Start as invisible */
        transform: translateY(10px); /* Start slightly lower */
        transition: opacity 0.4s ease, transform 0.4s ease; /* Transition effects */
    }

        .student-item.visible {
            opacity: 1; /* Fully visible */
            transform: translateY(0); /* Move to original position */
        }

    .student-info {
        flex: 1;
        margin-right: 20px;
        display: flex;
        text-align: center;
        justify-content: center !important;
        flex-direction: column;
        gap: 10px;
    }

    .student-image {
        margin-bottom: 10px;
        display: flex;
        justify-content: center; /* Center the image horizontally */
        align-items: center; /* Center the image vertically */
    }

    .student-actions {
        flex-direction: column;
        align-items: center !important;
        text-align: center;
        gap: 10px;
    }

    .btn-floating {
        position: fixed; /* Keep it fixed in the viewport */
        bottom: 20px; /* Distance from the bottom */
        right: 20px; /* Distance from the right */
        width: 60px; /* Width of the button */
        height: 60px; /* Height of the button */
        border-radius: 50%; /* Circular shape */
        background-color: #007bff; /* Primary color */
        color: white; /* Text/icon color */
        border: none; /* No border */
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* Shadow for depth */
        transition: background-color 0.3s ease, transform 0.2s ease; /* Smooth transitions */
        z-index: 1000; /* Ensure it appears above other elements */
    }

        .btn-floating:hover {
            background-color: #0056b3; /* Darker shade on hover */
            transform: scale(1.05); /* Slightly enlarge button on hover */
        }

        .btn-floating:active {
            transform: scale(0.95); /* Slightly shrink button on click */
        }

        /* Additional styles for the icon */
        .btn-floating i {
            font-size: 24px; /* Icon size */
        }


    .modal-header {
        border-bottom: 2px solid #e9ecef; /* Add a bottom border */
    }

    .modal-body {
        font-size: 16px; /* Increase font size for better readability */
    }

    .btn-primary, .btn-danger, .btn-secondary {
        transition: background-color 0.3s ease, transform 0.2s ease; /* Smooth transition effects */
        background-color: #007bff; /* Default color for primary */
        color: white; /* Text color */
        border-radius: 5px; /* Rounded corners */
    }

    .btn-primary, .btn-danger, .btn-secondary {
        transition: background-color 0.3s ease, transform 0.2s ease; /* Smooth transition effects */
        background-color: #007bff; /* Default color for primary */
        color: white; /* Text color */
        border-radius: 5px; /* Rounded corners */
        position: relative; /* Position relative for absolute children */
        overflow: hidden; /* Hide overflow for the animated effect */
    }

    .btn-primary {
        background-color: #007bff; /* Primary color */
    }

    .btn-danger {
        background-color: #dc3545; /* Danger color */
    }

    .btn-secondary {
        background-color: #6c757d; /* Secondary color */
    }

        /* Hover effect */
        .btn-primary:hover, .btn-danger:hover, .btn-secondary:hover {
          
            transform: scale(1.05); /* Slightly enlarge buttons on hover */
        }

        /* Click effect */
        .btn-primary:active, .btn-danger:active, .btn-secondary:active {
            transform: scale(0.95); /* Slightly shrink buttons on click */
        }

    /* Ensure the animated button still works */
    .animated-button {
        position: relative; /* To use for animation */
        border: none; /* Remove border */
        outline: none; /* Remove outline */
        cursor: pointer; /* Change cursor to pointer */
    }

        .animated-button:after {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            
            top: 0;
            left: 0;
            transform: scale(0);
            transition: transform 0.4s ease-in-out;
            z-index: 0;
        }

        .animated-button:hover:after {
            transform: scale(1);
        }

        .animated-button span {
            position: relative;
            z-index: 1; /* Bring text above the overlay */
        }

    .close {
        background-color: transparent; /* Remove default background */
        border: none; /* Remove border */
        color: #fff; /* White color for close button text */
    }

</style>




<div class="d-column justify-content-between align-items-center">
    <h4 class="mb-0 mt-2">Student Lists</h4>
</div>

<div class="students-list mt-3">
    @if (Model.Student != null && Model.Student.Any())
    {
        @foreach (var student in Model.Student)
        {
            <div class="student-item ms-3">
                    <!-- Separate div for the profile image -->
                    <div class="student-image center">
                    <img src="data:image/png;base64,@Convert.ToBase64String(student.ImageData)" width="150" height="150" class="rounded-circle" />
                    </div>
                    <!-- Student details -->
                    <div class="student-info">
                        <h4>@student.Name</h4>
                        <p>Date of Admission: @student.DateOfAdmission.ToString("MM/dd/yyyy")</p>
                    </div>
                <!-- Actions div for Edit, Details, and Delete buttons -->
                <div class="student-actions">
                    <button type="button" class="btn btn-primary btn-sm" title="Edit" data-toggle="modal" data-target="#editStudentModal" data-id="@student.Id">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button type="button" title="Details" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#studentDetailsModal" data-id="@student.Id">
                        <i class="fas fa-eye"></i>
                    </button>
                    <a asp-page="Delete" asp-route-id="@student.Id" class="btn btn-danger btn-sm" title="Delete"
                       data-id="@student.Id"
                       data-enroll-number="@student.EnrollNumber"
                       data-name="@student.Name"
                       data-toggle="modal"
                       data-target="#deleteStudentModal">
                        <i class="fas fa-trash"></i>
                    </a>
                </div>
            </div>
        }
    }
    else
    {
        <p>No students found.</p>
    }

    <button type="button" class="btn btn-floating" data-toggle="modal" data-target="#createStudentModal">
        <i class="fas fa-user-plus"></i>
    </button>



</div>


@* <nav aria-label="Page navigation example" >
    <ul class="pagination justify-content-center">
        <li class="page-item active">
            <span class="page-link">
                1
                <span class="sr-only">(current)</span>
            </span>
        </li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item">
            <a class="page-link" href="#">Next</a>
        </li>

    </ul>
</nav> *@



<!-- Create Student Modal -->
<div class="modal fade" id="createStudentModal" tabindex="-1" role="dialog" aria-labelledby="createStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="createStudentModalLabel">Create Student</h5>
                <button type="button" class="close animated-button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">
                        <i class="fas fa-times-circle" style="font-size: 1.5rem; color: white;"></i>
                    </span>
                </button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="CreateStudent" enctype="multipart/form-data">
                    <div class="form-group mb-3">
                        <label asp-for="StudentDto.Name"></label>
                        <input asp-for="StudentDto.Name" class="form-control" required />
                        <span asp-validation-for="StudentDto.Name" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="StudentDto.Email"></label>
                        <input asp-for="StudentDto.Email" class="form-control" type="email" required />
                        <span asp-validation-for="StudentDto.Email" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="StudentDto.Phone"></label>
                        <input asp-for="StudentDto.Phone" class="form-control" required />
                        <span asp-validation-for="StudentDto.Phone" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="StudentDto.ImageFile"></label>
                        <input asp-for="StudentDto.ImageFile" class="form-control" type="file" />
                        <span asp-validation-for="StudentDto.ImageFile" class="text-danger"></span>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.errorMessage))
                    {
                        <div class="alert alert-warning alert-dismissible fade show" role="alert">
                            <strong>@Model.errorMessage</strong>
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    else if (!string.IsNullOrEmpty(Model.successMessage))
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <strong>@Model.successMessage</strong>
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary animated-button" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary animated-button">Create Student</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>




<!-- Student Details Modal -->
<div class="modal fade" id="studentDetailsModal" tabindex="-1" role="dialog" aria-labelledby="studentDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="studentDetailsModalLabel">Student Details</h5>
                <button type="button" class="close animated-button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">
                        <i class="fas fa-times-circle" style="font-size: 1.5rem; color: white;"></i>
                    </span>
                </button>
            </div>
            <div class="modal-body">
                <dl class="row">
                    <dt class="col-sm-4">Profile Picture</dt>
                    <dd class="col-sm-8">
                        <img id="studentImage" src="" alt="Profile Picture" class="img-fluid rounded-circle" style="width: 100% !important; max-width: 150px; max-height: 150px;" />
                    </dd>
                    <dt class="col-sm-4">Name</dt>
                    <dd class="col-sm-8" id="studentName"></dd>
                    <dt class="col-sm-4">Email</dt>
                    <dd class="col-sm-8" id="studentEmail"></dd>
                    <dt class="col-sm-4">Phone</dt>
                    <dd class="col-sm-8" id="studentPhone"></dd>
                    <dt class="col-sm-4">Enroll Number</dt>
                    <dd class="col-sm-8" id="studentEnrollNumber"></dd>
                    <dt class="col-sm-4">Date of Admission</dt>
                    <dd class="col-sm-8" id="studentDateOfAdmission"></dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary animated-button" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Student Modal -->
<div class="modal fade" id="deleteStudentModal" tabindex="-1" role="dialog" aria-labelledby="deleteStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteStudentModalLabel">Delete Student</h5>
                <button type="button" class="close animated-button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">
                        <i class="fas fa-times-circle" style="font-size: 1.5rem; color: white;"></i>
                    </span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the student?</p>
                <div class="mt-3">
                    <strong>Name:</strong> <span id="deleteStudentName"></span><br>
                    <strong>Enrollment Number:</strong> <span id="deleteStudentEnrollNumber"></span><br>
                    <strong>ID:</strong> <span id="deleteStudentId"></span>
                </div>
            </div>
            <div class="modal-footer">
                <input type="hidden" id="studentId" />
                <button type="button" class="btn btn-secondary animated-button" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Student Modal -->
<div class="modal fade" id="editStudentModal" tabindex="-1" role="dialog" aria-labelledby="editStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="editStudentModalLabel">Edit Student</h5>
                <button type="button" class="close animated-button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">
                        <i class="fas fa-times-circle" style="font-size: 1.5rem; color: white;"></i>
                    </span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editStudentForm" method="post" enctype="multipart/form-data">
                    <input type="hidden" id="editStudentId" name="StudentDto.Id" /> <!-- Hidden input for Id -->
                    <div class="form-group">
                        <label for="editStudentName">Name</label>
                        <input type="text" class="form-control" id="editStudentName" name="StudentDto.Name" required />
                    </div>
                    <div class="form-group">
                        <label for="editStudentEmail">Email</label>
                        <input type="email" class="form-control" id="editStudentEmail" name="StudentDto.Email" required />
                    </div>
                    <div class="form-group">
                        <label for="editStudentPhone">Phone</label>
                        <input type="text" class="form-control" id="editStudentPhone" name="StudentDto.Phone" required />
                    </div>
                    <div class="form-group">
                        <label for="editStudentImage">Image</label>
                        <input type="file" class="form-control" id="editStudentImage" name="StudentDto.ImageFile" />
                    </div>
                    <div class="form-group mt-3">
                        <!-- Added margin top for spacing -->
                        <button type="submit" class="btn btn-primary animated-button">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>




<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<script>
    $(document).ready(function () {
        // Handle the details modal display
        $('.btn-primary[data-toggle="modal"]').click(function () {
            var studentId = $(this).data('id'); // Get the student ID

            $.ajax({
                url: '/Index?handler=Details', // Correct route for fetching student details
                type: 'GET',
                data: { id: studentId },
                success: function (data) {
                    $('#studentName').text(data.name);
                    $('#studentEmail').text(data.email);
                    $('#studentPhone').text(data.phone);
                    $('#studentEnrollNumber').text(data.enrollNumber);
                    $('#studentDateOfAdmission').text(data.dateOfAdmission);

                    // If the image data is available, set the image src to the base64 string
                    if (data.imageDataUrl) {
                        $('#studentImage').attr('src', data.imageDataUrl);
                    } else {
                        // Use a placeholder image if no image is available
                        $('#studentImage').attr('src', '/default-profile.png');
                    }
                }
            });
        });

        // Handle the delete button click event to show student info in delete modal
        $('.btn-danger[data-toggle="modal"]').click(function () {
            var studentId = $(this).data('id');
            var studentName = $(this).data('name');
            var enrollNumber = $(this).data('enroll-number');

            // Set the values in the delete confirmation modal
            $('#studentId').val(studentId);
            $('#deleteStudentName').text(studentName);
            $('#deleteStudentEnrollNumber').text(enrollNumber);
            $('#deleteStudentId').text(studentId);
        });

        // Handle the confirm delete button click
        $('#confirmDeleteButton').click(function () {
            var studentId = $('#studentId').val();
            $.ajax({
                url: '/Index?handler=Delete',
                type: 'POST',
                data: JSON.stringify(studentId),  // Send just the ID
                contentType: 'application/json',
                headers: {
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Deleted!',
                            text: 'Student deleted successfully!',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            $('#deleteStudentModal').modal('hide');
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message,
                            confirmButtonText: 'OK'
                        });

                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", xhr.status, xhr.statusText);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'There was an error in deleting the student, please contact pjquiros.',
                        confirmButtonText: 'OK'
                    });
                }
            });
        });

        // Handle clicking the edit button
        $('button[data-target="#editStudentModal"]').click(function () {
            var studentId = $(this).data('id'); // Get the student ID from the button

            $.ajax({
                url: '/Index?handler=Details', // Correct route to fetch student details
                type: 'GET',
                data: { id: studentId },
                success: function (data) {
                    // Populate the edit modal with student details
                    $('#editStudentId').val(studentId);
                    $('#editStudentName').val(data.name);
                    $('#editStudentEmail').val(data.email);
                    $('#editStudentPhone').val(data.phone);

                    // Set the current student image
                    if (data.imageDataUrl) {
                        $('#currentStudentImage').attr('src', data.imageDataUrl);
                    } else {
                        $('#currentStudentImage').attr('src', '/default-profile.png');
                    }
                }
            });
        });

        // Handle form submission for updating student details
        $('#editStudentForm').submit(function (e) {
            e.preventDefault();

            $.ajax({
                url: '/Index?handler=EditStudent', // Ensure the URL matches your C# method
                type: 'POST',
                data: new FormData(this),
                contentType: false,
                processData: false,
                success: function () {
                    Swal.fire({
                        icon: 'success',
                        title: 'Updated!',
                        text: 'Student details updated successfully!',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        $('#editStudentModal').modal('hide');
                        location.reload(); // Reload the page to reflect changes
                    });

                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to update student details.',
                        confirmButtonText: 'OK'
                    });

                }
            });
        });
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const studentItems = document.querySelectorAll('.student-item');
        studentItems.forEach((item, index) => {
            setTimeout(() => {
                item.classList.add('visible'); // Add class to make it visible with animation
            }, index * 100); // Stagger the animations slightly
        });
    });
</script>
<!-- Include SweetAlert CSS and JS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Include jQuery and Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />

}

